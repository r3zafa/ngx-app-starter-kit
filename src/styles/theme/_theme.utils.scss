@use "@angular/material" as mat;
@use './theme.jade-serenity.palettes' as jsc;
@use "./theme.twilight-blaze.palettes" as tbc;

@function theme-fn($type, $primary, $tertiary) {
  @return mat.define-theme((color: (theme-type: $type,
          primary: $primary,
          tertiary: $tertiary,
  ),
          typography: (plain-family: Poppins,
                  brand-family: Montserrat,
                  bold-weight: 700,
                  medium-weight: 500,
                  regular-weight: 400,
                  use-system-variables: false,
          ),
          density: (scale: -1),
  ));
}

// 2. Create custom palettes based on your colors
@function create-custom-palette($color, $on-color) {
  @return (
          50: lighten($color, 40%),
          100: lighten($color, 30%),
          200: lighten($color, 20%),
          300: lighten($color, 10%),
          400: lighten($color, 5%),
          500: $color,
          600: darken($color, 5%),
          700: darken($color, 10%),
          800: darken($color, 15%),
          900: darken($color, 20%),
          contrast: (
                  50: $on-color,
                  100: $on-color,
                  200: $on-color,
                  300: $on-color,
                  400: $on-color,
                  500: $on-color,
                  600: $on-color,
                  700: $on-color,
                  800: $on-color,
                  900: $on-color,
          )
  );
}

@mixin navbar-theme($palette-name, $shade-drawer, $shade-text) {
  @if $palette-name == 'tbc' {
    .mat-toolbar.navbar {
      --mat-toolbar-container-background-color: #{tbc.color(primary, $shade-drawer)};
      --mat-toolbar-container-text-color: #{tbc.color(primary, $shade-text)};
      --mdc-icon-button-icon-color: #{tbc.color(primary, $shade-text)};
    }
  } @else {
    .mat-toolbar.navbar {
      --mat-toolbar-container-background-color: #{jsc.color(primary, $shade-drawer)};
      --mat-toolbar-container-text-color: #{jsc.color(primary, $shade-text)};
      --mdc-icon-button-icon-color: #{jsc.color(primary, $shade-text)};
    }
  }
}

@mixin sidenav-theme($palette-name, $shade-bkg, $shade-border, $shade-text: null) {
  @if $palette-name == 'tbc' {
    .mat-drawer-container.content {
      --mat-sidenav-content-background-color: #{tbc.color(neutral, $shade-bkg)};
      --mat-sidenav-container-divider-color: #{tbc.color(primary, $shade-border)};

      @if $shade-text != null {
        --mat-sidenav-content-text-color: #{tbc.color(neutral, $shade-text)};
      } @else {
        --mat-sidenav-content-text-color: var(--mat-sys-on-surface);
      }
    }
  } @else {
    .mat-drawer-container.content {
      --mat-sidenav-content-background-color: #{jsc.color(neutral, $shade-bkg)};
      --mat-sidenav-container-divider-color: #{jsc.color(primary, $shade-border)};

      @if $shade-text != null {
        --mat-sidenav-content-text-color: #{jsc.color(neutral, $shade-text)};
      } @else {
        --mat-sidenav-content-text-color: var(--mat-sys-on-surface);
      }
    }
  }
}

@mixin mdc-error-card($palette-name, $shade-bkg, $shade-text, $light: false) {
  @if ($light) {
    --mat-text-button-hover-state-layer-opacity: 0.15;
  }

  @if $palette-name == 'tbc' {
    .mdc-card.error-card {
      --mdc-outlined-card-outline-color: #{tbc.color(error, $shade-bkg)};
      --mdc-outlined-card-container-color: #{tbc.color(error, $shade-bkg)};

      .error-content {
        color: #{tbc.color(error, $shade-text)};
      }
    }
  } @else {
    .mdc-card.error-card {
      --mdc-outlined-card-outline-color: #{jsc.color(error, $shade-bkg)};
      --mdc-outlined-card-container-color: #{jsc.color(error, $shade-bkg)};

      .error-content {
        color: #{jsc.color(error, $shade-text)};
      }
    }
  }
}

@mixin mdc-list-item-selected($palette-name, $shade-text, $shade-hover, $shade-focus, $shade-indicator) {
  @if $palette-name == 'tbc' {
    .mdc-list-item.content-list-item.selected {
      --mdc-list-list-item-label-text-color: #{tbc.color(secondary, $shade-text)};
      --mdc-list-list-item-hover-label-text-color: #{tbc.color(secondary, $shade-hover)};
      --mdc-list-list-item-focus-label-text-color: #{tbc.color(secondary, $shade-focus)};
      --mat-list-active-indicator-color: #{tbc.color(secondary, $shade-indicator)};
    }
  } @else {
    .mdc-list-item.content-list-item.selected {
      --mdc-list-list-item-label-text-color: #{jsc.color(secondary, $shade-text)};
      --mdc-list-list-item-hover-label-text-color: #{jsc.color(secondary, $shade-hover)};
      --mdc-list-list-item-focus-label-text-color: #{jsc.color(secondary, $shade-focus)};
      --mat-list-active-indicator-color: #{jsc.color(secondary, $shade-indicator)};
    }
  }
}

@mixin card-hover($palette-name, $shade) {
  @if $palette-name == 'tbc' {
    .mat-mdc-card-outlined.country-card:hover {
      background-color: #{tbc.color(secondary, $shade)};
    }
  } @else {
    .mat-mdc-card-outlined.country-card:hover {
      background-color: #{jsc.color(secondary, $shade)};
    }
  }
}
