// This file was generated by running 'ng generate @angular/material:m3-theme'.
// Proceed with caution if making changes to this file.
@use "sass:map";
@use "./palettes" as c;
@use "@angular/material" as mat;

@include mat.core();

$_rest: (
  secondary: map.get(c.$palettes, secondary),
  neutral: map.get(c.$palettes, neutral),
  neutral-variant: map.get(c.$palettes, neutral-variant),
  error: map.get(c.$palettes, error),
);

$_primary: map.merge(map.get(c.$palettes, primary), $_rest);
$_tertiary: map.merge(map.get(c.$palettes, tertiary), $_rest);

$light-theme: mat.define-theme(
  (
    color: (
      theme-type: light,
      primary: $_primary,
      tertiary: $_tertiary,
      use-system-variables: true,
    ),
    typography: (
      use-system-variables: true,
    ),
    density: (
      scale: -1,
    ),
  )
);

$dark-theme: mat.define-theme(
  (
    color: (
      theme-type: dark,
      primary: $_primary,
      tertiary: $_tertiary,
      use-system-variables: true,
    ),
    typography: (
      use-system-variables: true,
    ),
    density: (
      scale: -1,
    ),
  )
);

:root {
  // light theme variables
  --navbar-bkg-light-color: #{map.get(map.get(c.$palettes, primary), 30)};
  --sidenav-bkg-light-color: #{map.get(map.get(c.$palettes, primary), 40)};
  --navbar-text-light-color: #{map.get(map.get(c.$palettes, primary), 100)};

  // dark theme variables
  --navbar-bkg-dark-color: #{map.get(map.get(c.$palettes, primary), 10)};
  --sidenav-bkg-dark-color: #{darken(map.get(map.get(c.$palettes, primary), 20),2)};
  --navbar-text-dark-color: #{map.get(map.get(c.$palettes, primary), 100)};

  // navbar and sidnav variables
  --navbar-sidenav-toggle-bkg-color-on-hover: rgba(0, 0, 0, 0.25);
  --navbar-action-hover-bkg-color: #{map.get(map.get(c.$palettes, secondary),80)};
  --navbar-standard-height: 4.5rem;
  --navbar-standard-height-mobile: 4.5rem;
  --navbar-title-text-size: 1.7rem;
  --navbar-sidenav-toggle-size: 3rem;
  --navbar-action-size: 2.2rem;
  --navbar-action-size-mobile: 2.2rem;
  --navbar-action-width-mobile: 3.5rem;
}

:root,
html:not(.dark-theme) {
  color-scheme: light;
  @include mat.all-component-themes($light-theme);
  @include mat.color-variants-backwards-compatibility($light-theme);
  // background colors
  --mat-toolbar-container-background-color: var(--navbar-bkg-light-color);
  --mat-sidenav-container-background-color: var(--sidenav-bkg-light-color);
  --mat-menu-container-color: #{map.get(map.get(c.$palettes, primary), 100)};
  // text colors
  --mat-toolbar-container-text-color: var(--navbar-text-light-color);
  // others
  --mat-sidenav-container-shape: 0;
  --mat-minimal-pseudo-checkbox-selected-checkmark-color: #{map.get(map.get(c.$palettes, secondary),60)};
  // navbar variables
  --mat-toolbar-standard-height: var(--navbar-standard-height);
  --mat-toolbar-title-text-size: var(--navbar-title-text-size);
  --mdc-icon-button-state-layer-size: var(--navbar-standard-height);
  --mat-toolbar-mobile-height: var(--navbar-standard-height-mobile);
}

html.dark-theme {
  color-scheme: dark;
  @include mat.all-component-colors($dark-theme);
  @include mat.color-variants-backwards-compatibility($dark-theme);
  // background colors
  --mat-toolbar-container-background-color: var(--navbar-bkg-dark-color);
  --mat-sidenav-container-background-color: var(--sidenav-bkg-dark-color);
  --mat-menu-container-color: #{map.get(map.get(c.$palettes, neutral), 20)};
  // text colors
  --mat-toolbar-container-text-color: var(--navbar-text-dark-color);
  // others
  --mat-sidenav-container-shape: 0;
  --mat-minimal-pseudo-checkbox-selected-checkmark-color: #{map.get(map.get(c.$palettes, secondary),60)};
  // navbar variables
  --mat-toolbar-standard-height: var(--navbar-standard-height);
  --mat-toolbar-title-text-size: var(--navbar-title-text-size);
  --mdc-icon-button-state-layer-size: var(--navbar-standard-height);
  --mat-toolbar-mobile-height: var(--navbar-standard-height-mobile);
  --navbar-sidenav-toggle-bkg-color-on-hover: rgba(255, 255, 255, 0.07);
  --navbar-action-hover-bkg-color: #{map.get(map.get(c.$palettes, secondary),70)};
}

body {
  background: var(--mat-sys-surface);
  color: var(--mat-sys-on-surface);
}

.mat-drawer {
  border-radius: unset;
}

.mat-drawer-container {
  height: 100%;
}

.mat-drawer-content {
  padding: 1rem;
}

div.mat-mdc-menu-content {
  padding: 0;
}

.mat-mdc-menu-panel {
  margin-top: 0.4rem;
}
